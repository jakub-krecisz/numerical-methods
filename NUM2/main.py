import numpy as np

#
# A1 = np.array([[2.34332898, -0.11253278, -0.01485349, 0.33316649, 0.71319625],
#               [-0.11253278, 1.67773628, -0.32678856, 0.31118836, 0.43342631],
#               [-0.01485349, -0.32678856, 2.66011353, 0.85462464, 0.16698798],
#               [0.33316649, -0.31118836, 0.85462464, 1.54788582, 0.32269197],
#               [0.71319625, -0.43342631, 0.16698798, 0.32269197, 3.27093538]])
#
# A2 = np.array([[2.34065520, -0.05353743, 0.00237792, 0.32944082, 0.72776588],
#               [-0.05353743, 0.37604149, 0.70698859, 0.22898376, 0.75489595],
#               [0.00237792, -0.70698859, 2.54906441, 0.87863502, 0.07309288],
#               [0.32944082, -0.22898376, 0.87863502, 1.54269444, 0.34299341],
#               [0.72776588, -0.75489595, 0.07309288, 0.34299341, 3.19154447]])
#
#
# b = np.array([3.55652063354463, -1.86337418741501, 5.84125684808554, -1.74587299057388, 0.84299677124244])
# print(bPrim)
#
# bPrim = b + np.array([10**(-5), 0, 0, 0, 0]).transpose()
import numpy as np


def RozkladDoolittle(macierz):
    n = len(macierz)
    gorna = [[0] * n for x in range(n)]
    dolna = [[0] * n for x in range(n)]

    for i in range(n):
        for k in range(i, n):
            suma = sum([dolna[i][j] * gorna[j][k] for j in range(i)])
            gorna[i][k] = macierz[i][k] - suma
        for k in range(i, n):
            if i == k:
                dolna[i][i] = 1
                continue
            suma = sum([dolna[k][j] * gorna[j][i] for j in range(i)])
            dolna[k][i] = (macierz[k][i] - suma) / gorna[i][i]
    return gorna, dolna

